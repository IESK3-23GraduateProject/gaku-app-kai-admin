/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as PostsImport } from './routes/posts'
import { Route as AllusersImport } from './routes/all_users'
import { Route as PostsIndexImport } from './routes/posts.index'
import { Route as NewsIndexImport } from './routes/news/index'
import { Route as AbsencesIndexImport } from './routes/absences/index'
import { Route as PostsPostIdImport } from './routes/posts.$postId'
import { Route as NewsCreateImport } from './routes/news/create'
import { Route as NewsNewsidImport } from './routes/news/$news_id'
import { Route as AdminStudentsImport } from './routes/admin/students'
import { Route as AdminSchoolEventImport } from './routes/admin/schoolEvent'
import { Route as AdminClassImport } from './routes/admin/class'
import { Route as AbsencesAbsenceidImport } from './routes/absences/$absence_id'
import { Route as HrclassStudentsIndexImport } from './routes/hr_class/students/index'
import { Route as HrclassStudentsStudentidImport } from './routes/hr_class/students/$student_id'

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const PostsRoute = PostsImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const AllusersRoute = AllusersImport.update({
  id: '/all_users',
  path: '/all_users',
  getParentRoute: () => rootRoute,
} as any)

const PostsIndexRoute = PostsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostsRoute,
} as any)

const NewsIndexRoute = NewsIndexImport.update({
  id: '/news/',
  path: '/news/',
  getParentRoute: () => rootRoute,
} as any)

const AbsencesIndexRoute = AbsencesIndexImport.update({
  id: '/absences/',
  path: '/absences/',
  getParentRoute: () => rootRoute,
} as any)

const PostsPostIdRoute = PostsPostIdImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => PostsRoute,
} as any)

const NewsCreateRoute = NewsCreateImport.update({
  id: '/news/create',
  path: '/news/create',
  getParentRoute: () => rootRoute,
} as any)

const NewsNewsidRoute = NewsNewsidImport.update({
  id: '/news/$news_id',
  path: '/news/$news_id',
  getParentRoute: () => rootRoute,
} as any)

const AdminStudentsRoute = AdminStudentsImport.update({
  id: '/admin/students',
  path: '/admin/students',
  getParentRoute: () => rootRoute,
} as any)

const AdminSchoolEventRoute = AdminSchoolEventImport.update({
  id: '/admin/schoolEvent',
  path: '/admin/schoolEvent',
  getParentRoute: () => rootRoute,
} as any)

const AdminClassRoute = AdminClassImport.update({
  id: '/admin/class',
  path: '/admin/class',
  getParentRoute: () => rootRoute,
} as any)

const AbsencesAbsenceidRoute = AbsencesAbsenceidImport.update({
  id: '/absences/$absence_id',
  path: '/absences/$absence_id',
  getParentRoute: () => rootRoute,
} as any)

const HrclassStudentsIndexRoute = HrclassStudentsIndexImport.update({
  id: '/hr_class/students/',
  path: '/hr_class/students/',
  getParentRoute: () => rootRoute,
} as any)

const HrclassStudentsStudentidRoute = HrclassStudentsStudentidImport.update({
  id: '/hr_class/students/$student_id',
  path: '/hr_class/students/$student_id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/all_users': {
      id: '/all_users'
      path: '/all_users'
      fullPath: '/all_users'
      preLoaderRoute: typeof AllusersImport
      parentRoute: typeof rootRoute
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/absences/$absence_id': {
      id: '/absences/$absence_id'
      path: '/absences/$absence_id'
      fullPath: '/absences/$absence_id'
      preLoaderRoute: typeof AbsencesAbsenceidImport
      parentRoute: typeof rootRoute
    }
    '/admin/class': {
      id: '/admin/class'
      path: '/admin/class'
      fullPath: '/admin/class'
      preLoaderRoute: typeof AdminClassImport
      parentRoute: typeof rootRoute
    }
    '/admin/schoolEvent': {
      id: '/admin/schoolEvent'
      path: '/admin/schoolEvent'
      fullPath: '/admin/schoolEvent'
      preLoaderRoute: typeof AdminSchoolEventImport
      parentRoute: typeof rootRoute
    }
    '/admin/students': {
      id: '/admin/students'
      path: '/admin/students'
      fullPath: '/admin/students'
      preLoaderRoute: typeof AdminStudentsImport
      parentRoute: typeof rootRoute
    }
    '/news/$news_id': {
      id: '/news/$news_id'
      path: '/news/$news_id'
      fullPath: '/news/$news_id'
      preLoaderRoute: typeof NewsNewsidImport
      parentRoute: typeof rootRoute
    }
    '/news/create': {
      id: '/news/create'
      path: '/news/create'
      fullPath: '/news/create'
      preLoaderRoute: typeof NewsCreateImport
      parentRoute: typeof rootRoute
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdImport
      parentRoute: typeof PostsImport
    }
    '/absences/': {
      id: '/absences/'
      path: '/absences'
      fullPath: '/absences'
      preLoaderRoute: typeof AbsencesIndexImport
      parentRoute: typeof rootRoute
    }
    '/news/': {
      id: '/news/'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof NewsIndexImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof PostsIndexImport
      parentRoute: typeof PostsImport
    }
    '/hr_class/students/$student_id': {
      id: '/hr_class/students/$student_id'
      path: '/hr_class/students/$student_id'
      fullPath: '/hr_class/students/$student_id'
      preLoaderRoute: typeof HrclassStudentsStudentidImport
      parentRoute: typeof rootRoute
    }
    '/hr_class/students/': {
      id: '/hr_class/students/'
      path: '/hr_class/students'
      fullPath: '/hr_class/students'
      preLoaderRoute: typeof HrclassStudentsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface PostsRouteChildren {
  PostsPostIdRoute: typeof PostsPostIdRoute
  PostsIndexRoute: typeof PostsIndexRoute
}

const PostsRouteChildren: PostsRouteChildren = {
  PostsPostIdRoute: PostsPostIdRoute,
  PostsIndexRoute: PostsIndexRoute,
}

const PostsRouteWithChildren = PostsRoute._addFileChildren(PostsRouteChildren)

export interface FileRoutesByFullPath {
  '/all_users': typeof AllusersRoute
  '/posts': typeof PostsRouteWithChildren
  '/profile': typeof ProfileRoute
  '/absences/$absence_id': typeof AbsencesAbsenceidRoute
  '/admin/class': typeof AdminClassRoute
  '/admin/schoolEvent': typeof AdminSchoolEventRoute
  '/admin/students': typeof AdminStudentsRoute
  '/news/$news_id': typeof NewsNewsidRoute
  '/news/create': typeof NewsCreateRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/absences': typeof AbsencesIndexRoute
  '/news': typeof NewsIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/hr_class/students/$student_id': typeof HrclassStudentsStudentidRoute
  '/hr_class/students': typeof HrclassStudentsIndexRoute
}

export interface FileRoutesByTo {
  '/all_users': typeof AllusersRoute
  '/profile': typeof ProfileRoute
  '/absences/$absence_id': typeof AbsencesAbsenceidRoute
  '/admin/class': typeof AdminClassRoute
  '/admin/schoolEvent': typeof AdminSchoolEventRoute
  '/admin/students': typeof AdminStudentsRoute
  '/news/$news_id': typeof NewsNewsidRoute
  '/news/create': typeof NewsCreateRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/absences': typeof AbsencesIndexRoute
  '/news': typeof NewsIndexRoute
  '/posts': typeof PostsIndexRoute
  '/hr_class/students/$student_id': typeof HrclassStudentsStudentidRoute
  '/hr_class/students': typeof HrclassStudentsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/all_users': typeof AllusersRoute
  '/posts': typeof PostsRouteWithChildren
  '/profile': typeof ProfileRoute
  '/absences/$absence_id': typeof AbsencesAbsenceidRoute
  '/admin/class': typeof AdminClassRoute
  '/admin/schoolEvent': typeof AdminSchoolEventRoute
  '/admin/students': typeof AdminStudentsRoute
  '/news/$news_id': typeof NewsNewsidRoute
  '/news/create': typeof NewsCreateRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/absences/': typeof AbsencesIndexRoute
  '/news/': typeof NewsIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/hr_class/students/$student_id': typeof HrclassStudentsStudentidRoute
  '/hr_class/students/': typeof HrclassStudentsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/all_users'
    | '/posts'
    | '/profile'
    | '/absences/$absence_id'
    | '/admin/class'
    | '/admin/schoolEvent'
    | '/admin/students'
    | '/news/$news_id'
    | '/news/create'
    | '/posts/$postId'
    | '/absences'
    | '/news'
    | '/posts/'
    | '/hr_class/students/$student_id'
    | '/hr_class/students'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/all_users'
    | '/profile'
    | '/absences/$absence_id'
    | '/admin/class'
    | '/admin/schoolEvent'
    | '/admin/students'
    | '/news/$news_id'
    | '/news/create'
    | '/posts/$postId'
    | '/absences'
    | '/news'
    | '/posts'
    | '/hr_class/students/$student_id'
    | '/hr_class/students'
  id:
    | '__root__'
    | '/all_users'
    | '/posts'
    | '/profile'
    | '/absences/$absence_id'
    | '/admin/class'
    | '/admin/schoolEvent'
    | '/admin/students'
    | '/news/$news_id'
    | '/news/create'
    | '/posts/$postId'
    | '/absences/'
    | '/news/'
    | '/posts/'
    | '/hr_class/students/$student_id'
    | '/hr_class/students/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AllusersRoute: typeof AllusersRoute
  PostsRoute: typeof PostsRouteWithChildren
  ProfileRoute: typeof ProfileRoute
  AbsencesAbsenceidRoute: typeof AbsencesAbsenceidRoute
  AdminClassRoute: typeof AdminClassRoute
  AdminSchoolEventRoute: typeof AdminSchoolEventRoute
  AdminStudentsRoute: typeof AdminStudentsRoute
  NewsNewsidRoute: typeof NewsNewsidRoute
  NewsCreateRoute: typeof NewsCreateRoute
  AbsencesIndexRoute: typeof AbsencesIndexRoute
  NewsIndexRoute: typeof NewsIndexRoute
  HrclassStudentsStudentidRoute: typeof HrclassStudentsStudentidRoute
  HrclassStudentsIndexRoute: typeof HrclassStudentsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AllusersRoute: AllusersRoute,
  PostsRoute: PostsRouteWithChildren,
  ProfileRoute: ProfileRoute,
  AbsencesAbsenceidRoute: AbsencesAbsenceidRoute,
  AdminClassRoute: AdminClassRoute,
  AdminSchoolEventRoute: AdminSchoolEventRoute,
  AdminStudentsRoute: AdminStudentsRoute,
  NewsNewsidRoute: NewsNewsidRoute,
  NewsCreateRoute: NewsCreateRoute,
  AbsencesIndexRoute: AbsencesIndexRoute,
  NewsIndexRoute: NewsIndexRoute,
  HrclassStudentsStudentidRoute: HrclassStudentsStudentidRoute,
  HrclassStudentsIndexRoute: HrclassStudentsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/all_users",
        "/posts",
        "/profile",
        "/absences/$absence_id",
        "/admin/class",
        "/admin/schoolEvent",
        "/admin/students",
        "/news/$news_id",
        "/news/create",
        "/absences/",
        "/news/",
        "/hr_class/students/$student_id",
        "/hr_class/students/"
      ]
    },
    "/all_users": {
      "filePath": "all_users.tsx"
    },
    "/posts": {
      "filePath": "posts.tsx",
      "children": [
        "/posts/$postId",
        "/posts/"
      ]
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/absences/$absence_id": {
      "filePath": "absences/$absence_id.tsx"
    },
    "/admin/class": {
      "filePath": "admin/class.tsx"
    },
    "/admin/schoolEvent": {
      "filePath": "admin/schoolEvent.tsx"
    },
    "/admin/students": {
      "filePath": "admin/students.tsx"
    },
    "/news/$news_id": {
      "filePath": "news/$news_id.tsx"
    },
    "/news/create": {
      "filePath": "news/create.tsx"
    },
    "/posts/$postId": {
      "filePath": "posts.$postId.tsx",
      "parent": "/posts"
    },
    "/absences/": {
      "filePath": "absences/index.tsx"
    },
    "/news/": {
      "filePath": "news/index.tsx"
    },
    "/posts/": {
      "filePath": "posts.index.tsx",
      "parent": "/posts"
    },
    "/hr_class/students/$student_id": {
      "filePath": "hr_class/students/$student_id.tsx"
    },
    "/hr_class/students/": {
      "filePath": "hr_class/students/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
